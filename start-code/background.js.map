{"mappings":"A,C,KC4EA,eAAe,EAAY,CAAG,EAC1B,IAAI,EAMJ,OALA,MAAM,MAAM,GACP,IAAA,CAAK,AAAA,GAAY,EAAS,IAAA,IAC1B,IAAA,CAAK,AAAA,IACF,EAAO,KAAK,KAAA,CAAM,EACtB,GACG,CACX,CApFA,OAAO,OAAA,CAAQ,OAAA,CAAQ,cAAA,CAAe,CAAE,YAAa,gCAAiC,GAIlF,OAAO,OAAA,EAAS,IAEhB,OAAO,OAAA,CAAQ,SAAA,CAAU,WAAA,CAAY,SAAU,CAAO,CAAE,CAAM,CAAE,CAAY,EAExE,IAAI,EAAc,EAAQ,IAAA,CAAK,UAAA,CAAW,IAAK,OAQ/C,GANA,QAAQ,GAAA,CAAI,UAAW,GAEnB,EAAQ,OAAR,CAIA,AAAoB,gBAApB,EAAQ,OAAA,CAA2B,CACnC,IAAI,EAAkB,CAAC,gFAAgF,EAAE,EAAY,UAAU,CAAC,CAChI,QAAQ,GAAA,CAAI,kBAAmB,GAE/B,IAAI,EAAiB,CAAC,+EAA+E,EAAE,EAAY,UAAU,CAAC,CAC9H,QAAQ,GAAA,CAAI,iBAAkB,GAE9B,EAAY,GAAiB,IAAA,CAAK,AAAA,QAI1B,EAFJ,QAAQ,GAAA,CAAI,aAAc,GAG1B,EAAS,IAAA,CAAK,IAAA,CAAK,OAAA,CAAQ,AAAA,IACvB,GAAI,EAAK,IAAA,GAAS,EAAQ,IAAA,CAAM,CAC5B,EAAQ,EAAK,YAAb,CACA,MACJ,CACJ,GACA,OAAO,IAAA,CAAK,KAAA,CAAM,CAAC,OAAQ,CAAA,EAAM,cAAe,CAAA,CAAI,EAAG,AAAA,IACnD,OAAO,IAAA,CAAK,WAAA,CAAY,CAAI,CAAC,EAAE,CAAC,EAAA,CAAI,CAChC,MAAO,EACP,IAAK,QACL,IAAK,CAAC,SAAS,EAAE,EAAgB,CAAC,CAClC,SAAU,CACd,EACJ,EACJ,GACA,EAAY,GAAgB,IAAA,CAAK,AAAA,QAEzB,EADJ,QAAQ,GAAA,CAAI,YAAa,GAEzB,EAAS,IAAA,CAAK,IAAA,CAAK,OAAA,CAAQ,AAAA,IACvB,GAAI,EAAK,IAAA,GAAS,EAAQ,IAAA,CAAM,CAC5B,EAAQ,EAAK,YAAb,CACA,MACJ,CACJ,GACA,OAAO,IAAA,CAAK,KAAA,CAAM,CAAC,OAAQ,CAAA,EAAM,cAAe,CAAA,CAAI,EAAG,AAAA,IACnD,OAAO,IAAA,CAAK,WAAA,CAAY,CAAI,CAAC,EAAE,CAAC,EAAA,CAAI,CAChC,MAAO,EACP,IAAK,OACL,IAAK,CAAC,QAAQ,EAAE,EAAe,CAAC,CAChC,SAAU,CACd,EACJ,EACJ,EACJ,CACA,GAAI,AAAoB,mBAApB,EAAQ,OAAA,CAA8B,CACpB,EAAQ,IAAA,CAAK,UAAA,CAAW,IAAK,OAC/C,IAAI,EAAiB,CAAC,iFAAiF,EAAE,EAAQ,IAAA,CAAK,UAAU,CAAC,CACjI,QAAQ,GAAA,CAAI,iBAAkB,GAC9B,EAAY,GAAgB,IAAA,CAAK,AAAA,IAC7B,QAAQ,GAAA,CAAI,WAAY,GACxB,EAAa,EAAS,IAAA,CAAK,IAA3B,CACJ,EACJ,CAEA,MAAO,CAAA,CACX,E,C","sources":["<anon>","src/background.js"],"sourcesContent":["(() => {\nchrome.storage.session.setAccessLevel({\n    accessLevel: \"TRUSTED_AND_UNTRUSTED_CONTEXTS\"\n});\n//chrome.storage.local.setAccessLevel({ accessLevel: 'TRUSTED_AND_UNTRUSTED_CONTEXTS' });\n//chrome.storage.sync.setAccessLevel({ accessLevel: 'TRUSTED_AND_UNTRUSTED_CONTEXTS' });\nif (chrome.runtime?.id) chrome.runtime.onMessage.addListener(function(message, sender, sendResponse) {\n    let textRequest = message.text.replaceAll(\" \", \"%20\");\n    console.log(\"message\", message);\n    message.command;\n    if (message.command === \"getRequests\") {\n        let monthRequestURL = `https://trending-searches.wb.ru/api?itemsPerPage=10&offset=0&period=month&query=${textRequest}&sort=desc`;\n        console.log(\"monthRequestURL\", monthRequestURL);\n        let weekRequestURL = `https://trending-searches.wb.ru/api?itemsPerPage=10&offset=0&period=week&query=${textRequest}&sort=desc`;\n        console.log(\"weekRequestURL\", weekRequestURL);\n        $536f6b49bdac2b8c$var$sendRequest(monthRequestURL).then((response)=>{\n            console.log(\"month data\", response);\n            let count;\n            response.data.list.forEach((item)=>{\n                if (item.text === message.text) {\n                    count = item.requestCount;\n                    return;\n                }\n            });\n            chrome.tabs.query({\n                active: true,\n                currentWindow: true\n            }, (tabs)=>{\n                chrome.tabs.sendMessage(tabs[0].id, {\n                    count: count,\n                    msg: \"month\",\n                    url: `monthURL ${monthRequestURL}`,\n                    response: response\n                });\n            });\n        });\n        $536f6b49bdac2b8c$var$sendRequest(weekRequestURL).then((response)=>{\n            console.log(\"week data\", response);\n            let count;\n            response.data.list.forEach((item)=>{\n                if (item.text === message.text) {\n                    count = item.requestCount;\n                    return;\n                }\n            });\n            chrome.tabs.query({\n                active: true,\n                currentWindow: true\n            }, (tabs)=>{\n                chrome.tabs.sendMessage(tabs[0].id, {\n                    count: count,\n                    msg: \"week\",\n                    url: `weekURL ${weekRequestURL}`,\n                    response: response\n                });\n            });\n        });\n    }\n    if (message.command === \"getTopRequests\") {\n        let textRequest = message.text.replaceAll(\" \", \"%20\");\n        let topRequestsURL = `https://trending-searches.wb.ru/api?itemsPerPage=100&offset=0&period=month&query=${message.text}&sort=desc`;\n        console.log(\"topRequestsURL\", topRequestsURL);\n        $536f6b49bdac2b8c$var$sendRequest(topRequestsURL).then((response)=>{\n            console.log(\"top data\", response);\n            sendResponse(response.data.list);\n        });\n    }\n    return true;\n});\nasync function $536f6b49bdac2b8c$var$sendRequest(url) {\n    let data;\n    await fetch(url).then((response)=>response.text()).then((response)=>{\n        data = JSON.parse(response);\n    });\n    return data;\n}\n\n})();\n//# sourceMappingURL=background.js.map\n","chrome.storage.session.setAccessLevel({ accessLevel: 'TRUSTED_AND_UNTRUSTED_CONTEXTS' });\n//chrome.storage.local.setAccessLevel({ accessLevel: 'TRUSTED_AND_UNTRUSTED_CONTEXTS' });\n//chrome.storage.sync.setAccessLevel({ accessLevel: 'TRUSTED_AND_UNTRUSTED_CONTEXTS' });\n\nif (chrome.runtime?.id) {\n\n    chrome.runtime.onMessage.addListener(function (message, sender, sendResponse) {\n\n        let textRequest = message.text.replaceAll(' ', '%20');\n\n        console.log('message', message);\n\n        if (message.command === 'getRequestsEvirma') {\n\n        }\n\n        if (message.command === 'getRequests') {\n            let monthRequestURL = `https://trending-searches.wb.ru/api?itemsPerPage=10&offset=0&period=month&query=${textRequest}&sort=desc`\n            console.log('monthRequestURL', monthRequestURL)\n\n            let weekRequestURL = `https://trending-searches.wb.ru/api?itemsPerPage=10&offset=0&period=week&query=${textRequest}&sort=desc`\n            console.log('weekRequestURL', weekRequestURL)\n\n            sendRequest(monthRequestURL).then(response => {\n\n                console.log('month data', response)\n\n                let count;\n                response.data.list.forEach(item => {\n                    if (item.text === message.text) {\n                        count = item.requestCount;\n                        return;\n                    }\n                })\n                chrome.tabs.query({active: true, currentWindow: true}, tabs => {\n                    chrome.tabs.sendMessage(tabs[0].id, {\n                        count: count,\n                        msg: 'month',\n                        url: `monthURL ${monthRequestURL}`,\n                        response: response\n                    });\n                })\n            })\n            sendRequest(weekRequestURL).then(response => {\n                console.log('week data', response)\n                let count;\n                response.data.list.forEach(item => {\n                    if (item.text === message.text) {\n                        count = item.requestCount;\n                        return;\n                    }\n                })\n                chrome.tabs.query({active: true, currentWindow: true}, tabs => {\n                    chrome.tabs.sendMessage(tabs[0].id, {\n                        count: count,\n                        msg: 'week',\n                        url: `weekURL ${weekRequestURL}`,\n                        response: response\n                    });\n                })\n            })\n        }\n        if (message.command === 'getTopRequests') {\n            let textRequest = message.text.replaceAll(' ', '%20');\n            let topRequestsURL = `https://trending-searches.wb.ru/api?itemsPerPage=100&offset=0&period=month&query=${message.text}&sort=desc`\n            console.log('topRequestsURL', topRequestsURL);\n            sendRequest(topRequestsURL).then(response => {\n                console.log('top data', response)\n                sendResponse(response.data.list);\n            })\n        }\n\n        return true;\n    })\n}\n\nasync function sendRequest(url) {\n    let data;\n    await fetch(url)\n        .then(response => response.text())\n        .then(response => {\n            data = JSON.parse(response);\n        })\n    return data;\n}"],"names":["$536f6b49bdac2b8c$var$sendRequest","url","data","fetch","then","response","text","JSON","parse","chrome","storage","session","setAccessLevel","accessLevel","runtime","id","onMessage","addListener","message","sender","sendResponse","textRequest","replaceAll","console","log","command","monthRequestURL","weekRequestURL","count","list","forEach","item","requestCount","tabs","query","active","currentWindow","sendMessage","msg","topRequestsURL"],"version":3,"file":"background.js.map"}